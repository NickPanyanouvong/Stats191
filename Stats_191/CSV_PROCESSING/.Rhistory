all_games <- all_games %>%
mutate(sport = match_sport(all_games$'previous competitive sports', sport))
}
all_games <- all_games %>%
mutate(evening = as.integer(`game scheduled` == "evening"),
morning = as.integer(`game scheduled` == "morning"),
`west coast` = as.integer(coast == "west coast"),
`university year` = ifelse(`university year`=="frosh",1,
ifelse(`university year`=="sophomore",2,
ifelse(`university year`=="junior",3,
ifelse(`university year`=="senior",4,NA)))),
night_owl = as.integer(`early bird/night owl` == "night owl"))
source('../SCRIPTS/helper_functions.R') # Import helpers
# Add indicator columns
for(sport in previous_sports){
all_games <- all_games %>%
mutate(sport = match_sport(all_games$'previous competitive sports', sport))
}
print(previous_sports)
print(sport)
source('../SCRIPTS/helper_functions.R') # Import helper
for(i in 1:nrow(previous_sports)){
sport = previous_sports[i]
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
# Add indicator columns
for(sport in as.list(previous_sports)){
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
# Add indicator columns
for(sport in as.list(previous_sports)){
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
# Add indicator columns
for(sport in previous_sports){
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
# Add indicator columns
for(sport in previous_sports){
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
previous_spots <- as.list(previous_sports)
previous_sports <- as.list(previous_sports)
View(previous_sports)
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports <- distinct(all_games %>%
select('previous competitive sports'))
previous_sports <- as.list(previous_sports)
previous_sports <- strsplit(as.list(previous_sports), " ")
previous_sports <- strsplit(as.list(previous_sports), ' ')
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports <- distinct(all_games %>%
select('previous competitive sports'))
previous_sports <- strsplit(as.list(previous_sports), ' ')
class(as.list(previous_sports))
sapply(as.list(previous_sports), class)
previous_sports <- strsplit(as.list(previous_sports), ' ')
previous_sports <- as.list(previous_sports)
previous_sports_col <- distinct(all_games %>%
previous_sports_col <- distinct(all_games %>%
select('previous competitive sports'))
previous_sports_col <- distinct(all_games %>%
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
View(previous_sports_col)
unique_sports <- as.list(previous_sports_col)
View(unique_sports)
unique_sports_list <- as.list(previous_sports_col)[[1]]
unique_sports_list <- as.list(previous_sports_col)[[1]]
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
print(sport)
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Add indicator columns
for(sport in unique_sports_list){
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
rlang::last_error()
View(all_games)
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
# Converts some of the categoricals in the just-made dataframe into
# indicator functions. The way I'm doing grades is clunky but I
# couldn't find a better way
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Add indicator columns
for(sport in unique_sports_list){
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
View(cell)
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Add indicator columns
for(sport in unique_sports_list){
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
View(all_games)
# Add indicator columns
for(i in seq(len(unique_sports_list))){
sport = unique_sports_list[[i]]
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
# Add indicator columns
for(i in seq(length(unique_sports_list))){
sport = unique_sports_list[[i]]
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
View(all_games)
sport = unique_sports_list[[i]]
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Add indicator columns
for(i in seq(length(unique_sports_list))){
sport = unique_sports_list[[i]]
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
View(all_games)
##### RUN THIS CODE BEFORE DOING ANYTHING ELSE #####
# MAKE SURE YOU HAVE ALL CSVs DOWNLOADED AND IN YOUR WORKING DIRECTORY
# Throughout this, there are varying difficulties of tasks marked TODO.
# They represent places where my work has been left at a place where there
# is a natural continuation of my work. Feel free to continue or start anew
# however you see fit, just the TODO activities give leads for stuck moments.
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
# Converts some of the categoricals in the just-made dataframe into
# indicator functions. The way I'm doing grades is clunky but I
# couldn't find a better way
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Add indicator columns
for(i in seq(length(unique_sports_list))){
sport <- unique_sports_list[[i]]
print(sport)
all_games <- all_games %>%
mutate(sport = match_sport(`previous competitive sports`, sport))
}
##### RUN THIS CODE BEFORE DOING ANYTHING ELSE #####
# MAKE SURE YOU HAVE ALL CSVs DOWNLOADED AND IN YOUR WORKING DIRECTORY
# Throughout this, there are varying difficulties of tasks marked TODO.
# They represent places where my work has been left at a place where there
# is a natural continuation of my work. Feel free to continue or start anew
# however you see fit, just the TODO activities give leads for stuck moments.
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
# Converts some of the categoricals in the just-made dataframe into
# indicator functions. The way I'm doing grades is clunky but I
# couldn't find a better way
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Add indicator columns
for(i in seq(length(unique_sports_list))){
sport <- unique_sports_list[[i]]
print(sport)
all_games <- all_games %>%
mutate(unique_sports_list[[i]] = match_sport(`previous competitive sports`, sport))
##### RUN THIS CODE BEFORE DOING ANYTHING ELSE #####
# MAKE SURE YOU HAVE ALL CSVs DOWNLOADED AND IN YOUR WORKING DIRECTORY
# Throughout this, there are varying difficulties of tasks marked TODO.
# They represent places where my work has been left at a place where there
# is a natural continuation of my work. Feel free to continue or start anew
# however you see fit, just the TODO activities give leads for stuck moments.
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
# Converts some of the categoricals in the just-made dataframe into
# indicator functions. The way I'm doing grades is clunky but I
# couldn't find a better way
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Generate indicator columns
columns <- c()
for(i in seq(length(unique_sports_list))){
sport <- unique_sports_list[[i]]
print(sport)
col <- match_sport(all_games$'previous competitive sports', sport)
columns <- c(columns, col)
}
columns[[1]]
# MAKE SURE YOU HAVE ALL CSVs DOWNLOADED AND IN YOUR WORKING DIRECTORY
# Throughout this, there are varying difficulties of tasks marked TODO.
# They represent places where my work has been left at a place where there
# is a natural continuation of my work. Feel free to continue or start anew
# however you see fit, just the TODO activities give leads for stuck moments.
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
# Converts some of the categoricals in the just-made dataframe into
# indicator functions. The way I'm doing grades is clunky but I
# couldn't find a better way
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Generate indicator columns
columns <- c()
for(i in seq(length(unique_sports_list))){
sport <- unique_sports_list[[i]]
print(sport)
col <- match_sport(all_games$'previous competitive sports', sport)
columns <- append(columns, col)
}
columns[[1]]
##### RUN THIS CODE BEFORE DOING ANYTHING ELSE #####
# MAKE SURE YOU HAVE ALL CSVs DOWNLOADED AND IN YOUR WORKING DIRECTORY
# Throughout this, there are varying difficulties of tasks marked TODO.
# They represent places where my work has been left at a place where there
# is a natural continuation of my work. Feel free to continue or start anew
# however you see fit, just the TODO activities give leads for stuck moments.
## Dependencies
library(tidyverse)
library(haven)
# Adjust wd, verify
file_path <- rstudioapi::getSourceEditorContext()$path
setwd(dirname(file_path))
source('../SCRIPTS/helper_functions.R') # Import helpers
## Open data and make their storage variables
games <- list(read_csv("../RAW_DATA/game_1_data.csv"),
read_csv("../RAW_DATA/game_2_data.csv"),
read_csv("../RAW_DATA/game_3_data.csv"),
read_csv("../RAW_DATA/game_4_data.csv"),
read_csv("../RAW_DATA/game_5_data.csv"),
read_csv("../RAW_DATA/game_6_data.csv"),
read_csv("../RAW_DATA/game_7_data.csv"),
read_csv("../RAW_DATA/game_8_data.csv"),
read_csv("../RAW_DATA/game_9_data.csv"),
read_csv("../RAW_DATA/game_10_data.csv"))
# Reads the games list into one big dataframe
# with an extra category indicating the game number
all_games <- games[[1]] %>%
mutate(game = 1)
for (index in 2:10) {
all_games = rbind(all_games, games[[index]] %>% mutate(game = index))
}
# Converts some of the categoricals in the just-made dataframe into
# indicator functions. The way I'm doing grades is clunky but I
# couldn't find a better way
# Notably missing: create an indicator function for previous sports (TODO)
# Identify all unique sports
previous_sports_col <- distinct(select(all_games, 'previous competitive sports'))
unique_sports_list <- as.list(previous_sports_col)[[1]]
# Generate indicator columns
columns <- c()
for(i in seq(length(unique_sports_list))){
sport <- unique_sports_list[[i]]
print(sport)
col <- match_sport(all_games$'previous competitive sports', sport)
columns[[i]] <- col
}
View(columns)
all_games <- all_games %>%
mutate(curling = columns[[1]], gymnastics = columns[[2]], baseball = columns[[3]],
martial_arts = columns[[4]], frisbee = columns[[5]], table_tennis = columns[[6]],
basketball = columns[[7]], football = columns[[8]])
View(all_games)
all_games <- all_games %>%
mutate(evening = as.integer(`game scheduled` == "evening"),
morning = as.integer(`game scheduled` == "morning"),
`west coast` = as.integer(coast == "west coast"),
`university year` = ifelse(`university year`=="frosh",1,
ifelse(`university year`=="sophomore",2,
ifelse(`university year`=="junior",3,
ifelse(`university year`=="senior",4,NA)))),
night_owl = as.integer(`early bird/night owl` == "night owl"))
View(all_games)
